{"demo/list":{"pagePath":"demo/list","actors":[{"fileName":"main","datas":[{"name":"request","value":{"q":"","pageNum":0,"pageSize":10}},{"name":"total","value":0},{"name":"list","value":[{}],"importInfo":{"apiFile":"BossGoodsEvaluateController","methodName":"page","interfaceName":"GoodsEvaluateVO3","isArray":true},"schemaType":"import"}],"events":[{"name":"modifyRequest","comment":"修改查询条件数据","content":"immerUtil.assign(draftState.request,payload);","param":""},{"name":"cleanList","comment":"清空查询结果","content":"draftState.list = [];","param":""},{"name":"queryResult","comment":"","content":"draftState.list = payload.list;\n        draftState.total = payload.total;\n        ","param":""}]}],"actions":[{"fileName":"action","methods":[{"name":"modifySearch","comment":"\n              普通条件查询可以走,commonChange\n              ","content":"\n      options.isResetPage?(param.pageNum=0):null;\n      dispatch({ type: Command.modifyRequest, payload: param});\n      //修改完直接查询;\n      if(options.isQuery) {\n        await this.query()\n      }\n      ","param":"param,options:{\n      isQuery:boolean;\n      isResetPage:boolean;\n    }={isQuery:true,isResetPage:true}"},{"name":"nextPage","comment":"查询下一页","param":"","content":"\n      let {request} = getData().main;\n      request.pageNum=request.pageNum+1;\n      dispatch({ type: Command.modifyRequest, payload: request });\n      await this.query();\n              "},{"name":"query","comment":"以当前查询条件查询","param":"","content":"let {request} =  getData().main;\n      //TODO 接口缺失 \n      \n      // let {projectVOPage:{total,list}} = await api.BossGoodsEvaluateController.page(\n      \n      dispatch({ type: Command.queryResult, payload: {\n        total:0,\n        list:[]\n        } });\n        "}]}],"subComps":[{"fileName":"info","methods":[{"name":"render","comment":"","content":"\n    /*\n    // 第一步添加引用; \n      import { Table, Popover,Button,Input,Select } from \"antd\";\n      import {toTableProps} from \"wmkit/ui-logic\";\n      import {GoodsEvaluateVO3} from  'api/BossGoodsEvaluateController'\n      \nconst getContent = (record: GoodsEvaluateVO3, index) =>(\n      <div className=\"opt-more\">\n         <a href=\"javascript:;\" data-id={record.projectId} data-index={index} data-status={record.addedFlag} onClick={action.toggleStatus}>{record.addedFlag===0?\"上架\":\"下架\"}</a>\n         <a href={\"#/goods/services-add?id=\"+record.projectId}>详情</a>\n      </div>\n    );\n    return (\n    <>\n      <div className=\"search\">\n          <div className=\"clearfix\">\n            <Button className=\"fl\" type=\"primary\" onClick={()=>location.href=\"\"}>添加服务</Button>\n            <div className=\"fr\">\n            <Select defaultValue={main.request.cate ? main.request.cate : '所有分类'}  onSelect={this._onSelect} style={{ width: 120,marginRight:20 }} >\n              <Select.Option value=\"\">所有分类</Select.Option>\n              {main.categorys.map((item:ProjectCateSimpleVO)=><Option value={item.projectCateId}>{item.projectCateName}</Option>)}\n            </Select>\n              <Input.Search\n                data-type={\"projectName\"}\n                placeholder=\"请输入服务名称\"\n                onChange={this._change}\n                onSearch={value => console.log(value)}\n                style={{ width: 200 }}\n              />\n              <Button className=\"ml10\" type=\"primary\" onClick={action.query} ghost>搜索</Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"list mt20\">\n          <Table {...toTableProps(main, action)}>\n            <Table.Column\n              title=\"分类\"\n              key=\"3\"\n              width={180}\n              render={(text, record: GoodsEvaluateVO3, index) => {\n                //这个还需要前端 聚合吗 ?\n                return <span>{record.projectCateName}</span>;\n              }}\n            />\n      \n         <Table.Column\n              title=\"展示/隐藏\"\n              key=\"4\"\n              render={(text, record:GoodsEvaluateVO3, index) => {\n                return <Switch onChange={(checked, evt)=>{\n                \n                }} checked={record.showFlag} />;\n              }}\n            />\n            <Table.Column\n              title=\"操作\"\n              key=\"7\"\n              width={180}\n              render={(text, record: GoodsEvaluateVO3, index) => {\n                return (\n                  <div className=\"opt\">\n                    <Popover\n                      placement=\"bottom\"\n                      content={getContent(record, index)}\n                      trigger=\"click\"\n                    >\n                      <a href=\"javascript:;\" className=\"btn\">更多</a>\n                    </Popover>\n                    <a\n                      className=\"btn\"\n                      href={'#/goods/service-add?id=' + record.projectId}\n                    >\n                      编辑\n                    </a>\n                  </div>\n                );\n              }}\n            />\n          </Table>\n        </div>\n    </>\n    );\n    */\n    ","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"init","param":"","content":""}},"mainComp":{"methods":[]}},"cashier/main":{"pagePath":"cashier/main","actors":[{"fileName":"cart","datas":[{"name":"list","schemaType":"fromValue","value":""},{"name":"customer","schemaType":"fromValue","value":""},{"name":"coupons","schemaType":"fromValue","value":""},{"name":"coupon2Use","schemaType":"fromValue","value":""}],"events":[{"name":"add","comment":"添加商品","param":""},{"name":"del","comment":"删除商品","param":""},{"name":"chooseCoupon","comment":"选择优惠券","param":""},{"name":"delChoosedCoupon","comment":"去除选中优惠券","param":""}]},{"fileName":"content","datas":[{"name":"type","schemaType":"fromValue","value":0},{"name":"requestGoods","value":{"q":"","pageNum":0,"pageSize":10}},{"name":"totalGoods","value":0},{"name":"listGoods","value":[{}],"importInfo":{"apiFile":"PetGoodsController","methodName":"list","interfaceName":"GoodsVO2","isArray":true},"schemaType":"import"},{"name":"requestService","value":{"q":"","pageNum":0,"pageSize":10}},{"name":"totalService","value":0},{"name":"listService","value":[{}],"importInfo":{"apiFile":"ProjectController","methodName":"page","interfaceName":"ProjectVO","isArray":true},"schemaType":"import"},{"name":"requestCard","value":{"q":"","pageNum":0,"pageSize":10}},{"name":"totalCard","value":0},{"name":"listCard","value":[{}],"importInfo":{"apiFile":"BossGoodsEvaluateController","methodName":"page","interfaceName":"GoodsEvaluateVO3","isArray":true},"schemaType":"import"},{"name":"goodsCates","schemaType":"import","value":[],"importInfo":{"apiFile":"StoreCateController","methodName":"list","interfaceName":"StoreCateResponseVOArray","isArray":false}},{"name":"serviceCates","schemaType":"import","value":[],"importInfo":{"apiFile":"StoreProjectCateController","methodName":"page","interfaceName":"ProjectCatePageVO","isArray":true}}],"events":[{"name":"modifyRequestGoods","comment":"修改查询条件数据","content":"immerUtil.assign(draftState.request,payload);","param":""},{"name":"cleanListGoods","comment":"清空查询结果","content":"draftState.list = [];","param":""},{"name":"queryResultGoods","comment":"","content":"draftState.list = payload.list;\n        draftState.total = payload.total;\n        ","param":""},{"name":"modifyRequestService","comment":"修改查询条件数据","content":"immerUtil.assign(draftState.request,payload);","param":""},{"name":"cleanListService","comment":"清空查询结果","content":"draftState.list = [];","param":""},{"name":"queryResultService","comment":"","content":"draftState.list = payload.list;\n        draftState.total = payload.total;\n        ","param":""},{"name":"modifyRequestCard","comment":"修改查询条件数据","content":"immerUtil.assign(draftState.request,payload);","param":""},{"name":"cleanListCard","comment":"清空查询结果","content":"draftState.list = [];","param":""},{"name":"queryResultCard","comment":"","content":"draftState.list = payload.list;\n        draftState.total = payload.total;\n        ","param":""}]}],"actions":[{"fileName":"cartAction","methods":[{"name":"add","comment":"添加商品","content":"","param":""},{"name":"del","comment":"删除商品","content":"","param":""},{"name":"chooseCoupon","comment":"选择优惠券","content":"","param":""},{"name":"delChoosedCoupon","comment":"去除选中优惠券","content":"","param":""}]},{"fileName":"contentAction","methods":[{"name":"modifySearchGoods","comment":"\n              普通条件查询可以走,commonChange\n              ","content":"\n      options.isResetPage?(param.pageNum=0):null;\n      dispatch({ type: Command.modifyRequestGoods, payload: param});\n      //修改完直接查询;\n      if(options.isQuery) {\n        await this.query()\n      }\n      ","param":"param,options:{\n      isQuery:boolean;\n      isResetPage:boolean;\n    }={isQuery:true,isResetPage:true}"},{"name":"nextPageGoods","comment":"查询下一页","param":"","content":"\n      let {request} = getData().main;\n      request.pageNum=request.pageNum+1;\n      dispatch({ type: Command.modifyRequestGoods, payload: request });\n      await this.query();\n              "},{"name":"queryGoods","comment":"以当前查询条件查询","param":"","content":"let {request} =  getData().main;\n      //TODO 接口缺失 \n      // let {projectVOPage:{total,list}} = await api.PetGoodsController.list(\n      \n      dispatch({ type: Command.queryResultGoods, payload: {\n        total:0,\n        list:[]\n        } });\n        "},{"name":"modifySearchService","comment":"\n              普通条件查询可以走,commonChange\n              ","content":"\n      options.isResetPage?(param.pageNum=0):null;\n      dispatch({ type: Command.modifyRequestService, payload: param});\n      //修改完直接查询;\n      if(options.isQuery) {\n        await this.query()\n      }\n      ","param":"param,options:{\n      isQuery:boolean;\n      isResetPage:boolean;\n    }={isQuery:true,isResetPage:true}"},{"name":"nextPageService","comment":"查询下一页","param":"","content":"\n      let {request} = getData().main;\n      request.pageNum=request.pageNum+1;\n      dispatch({ type: Command.modifyRequestService, payload: request });\n      await this.query();\n              "},{"name":"queryService","comment":"以当前查询条件查询","param":"","content":"let {request} =  getData().main;\n      //TODO 接口缺失 \n      // let {projectVOPage:{total,list}} = await api.ProjectController.page(\n      \n      dispatch({ type: Command.queryResultService, payload: {\n        total:0,\n        list:[]\n        } });\n        "},{"name":"modifySearchCard","comment":"\n              普通条件查询可以走,commonChange\n              ","content":"\n      options.isResetPage?(param.pageNum=0):null;\n      dispatch({ type: Command.modifyRequestCard, payload: param});\n      //修改完直接查询;\n      if(options.isQuery) {\n        await this.query()\n      }\n      ","param":"param,options:{\n      isQuery:boolean;\n      isResetPage:boolean;\n    }={isQuery:true,isResetPage:true}"},{"name":"nextPageCard","comment":"查询下一页","param":"","content":"\n      let {request} = getData().main;\n      request.pageNum=request.pageNum+1;\n      dispatch({ type: Command.modifyRequestCard, payload: request });\n      await this.query();\n              "},{"name":"queryCard","comment":"以当前查询条件查询","param":"","content":"let {request} =  getData().main;\n      //TODO 接口缺失 \n      // let {projectVOPage:{total,list}} = await api.BossGoodsEvaluateController.page(\n      \n      dispatch({ type: Command.queryResultCard, payload: {\n        total:0,\n        list:[]\n        } });\n        "},{"name":"modifyKeyWord","comment":"修改关键字","content":"","param":""}]}],"subComps":[{"fileName":"cart","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"cart-header","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"cart-list","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"cart-foot","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"cart-summary","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"content","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"content-search","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"content-tabs","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"content-tabs-service","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"content-tabs-goods","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"content-tabs-cards","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"content-bottom","methods":[{"name":"render","comment":"","content":"","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"init","param":"","content":""}},"mainComp":{"methods":[]}},"apps/meituan/auth":{"pagePath":"apps/meituan/auth","actors":[{"fileName":"main","datas":[{"name":"authinfo","schemaType":"import","value":"","importInfo":{"apiFile":"MeituanAuthController","methodName":"check","interfaceName":"MeituanAuthCheckResponse","isArray":false}},{"name":"shopList","schemaType":"import","value":"","importInfo":{"apiFile":"MeituanAuthController","methodName":"shop","interfaceName":"MeituanShopVO","isArray":true}},{"name":"shopInfo","schemaType":"import","value":"","importInfo":{"apiFile":"MeituanAuthController","methodName":"shop","interfaceName":"MeituanShopVO","isArray":false}}],"events":[]}],"actions":[{"fileName":"action","methods":[{"name":"authSucess","comment":"授权成功","content":"","param":""},{"name":"bindShop","comment":"绑定店铺","content":"","param":""}]}],"subComps":[{"fileName":"info","methods":[{"name":"render","comment":"","content":"","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"init","param":"","content":""}},"mainComp":{"methods":[]}},"test1/demo1":{"pagePath":"test1/demo1","actors":[{"fileName":"main","datas":[{"name":"request","value":{"q":"","pageNum":0,"pageSize":10}},{"name":"total","value":0},{"name":"list","value":[],"importInfo":{"apiFile":"BossGoodsEvaluateController","methodName":"page","interfaceName":"GoodsEvaluateVO3","isArray":true},"schemaType":"import"}],"events":[{"name":"modifyRequest","comment":"修改查询条件数据","content":"immerUtil.assign(draftState.request,payload);","param":""},{"name":"cleanList","comment":"清空查询结果","content":"draftState.list = [];","param":""},{"name":"queryResult","comment":"","content":"draftState.list = payload.list;\n        draftState.total = payload.total;\n        ","param":""}]}],"actions":[{"fileName":"action","methods":[{"name":"modifySearch","comment":"\n              普通条件查询可以走,commonChange\n              ","content":"\n      dispatch({ type: Command.modifyRequest, payload: param});\n      //修改完直接查询;\n      if(options.isQuery) {\n        await this.query(options.isResetPage)\n      }\n      ","param":"param,options:{\n      isQuery:boolean;\n      isResetPage:boolean;\n    }={isQuery:true,isResetPage:false}"},{"name":"nextPage","comment":"查询下一页","param":"","content":"\n      let {request} = getData().main;\n      request.pageNum=request.pageNum+1;\n      dispatch({ type: Command.modifyRequest, payload: request });\n      await this.query();\n              "},{"name":"query","comment":"以当前查询条件查询","param":"isResetPage:boolean=false","content":"\n            if(isResetPage) {\n              await dispatch({ type: Command.modifyRequest, payload: {pageNum:0} });\n            }\n          \n          let {request} =  getData().main;\n      //TODO 接口缺失 \n      // let {} = await api.BossGoodsEvaluateController.page();\n      \n      dispatch({ type: Command.queryResult, payload: {\n        total:0,\n        list:[]\n        } });\n        "}]}],"subComps":[{"fileName":"info","methods":[{"name":"render","comment":"","content":"","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"clean","param":"","content":""}},"mainComp":{"methods":[]}},"cashier/verify-destroy":{"pagePath":"cashier/verify-destroy","actors":[{"fileName":"main","datas":[{"name":"customerDetail","schemaType":"import","value":{},"importInfo":{"apiFile":"CustomerForPetController","methodName":"findByCustomerId","interfaceName":"StoreCustomerRelaVO","isArray":false}},{"name":"list","schemaType":"import","value":[],"importInfo":{"apiFile":"MeituanCouponController","methodName":"page","interfaceName":"MeituanDealPageResponse","isArray":false}},{"name":"qrCode","schemaType":"import","value":"","importInfo":{"apiFile":"MeituanCouponController","methodName":"validateByQrCode","interfaceName":"MeituanValidateByQrCodeResponse","isArray":false}},{"name":"couponCode","schemaType":"import","value":"","importInfo":{"apiFile":"MeituanCouponController","methodName":"validateByCode","interfaceName":"MeituanValidateByCodeResponse","isArray":false}},{"name":"count","schemaType":"fromValue","value":{}}],"events":[]}],"actions":[{"fileName":"action","methods":[{"name":"confireVerifyDestroy","comment":"确认核销","content":"","param":""},{"name":"verification","comment":"验证","content":"","param":""}]}],"subComps":[{"fileName":"cart","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"cart-list","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"content","methods":[{"name":"render","comment":"","content":"","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"clean","param":"","content":""}},"mainComp":{"methods":[]}},"apps/uc-card/stroke-card-record":{"pagePath":"apps/uc-card/stroke-card-record","actors":[{"fileName":"main","datas":[{"name":"request","value":{"q":"","pageNum":0,"pageSize":10}},{"name":"total","value":0},{"name":"list","value":[],"importInfo":{"apiFile":"StampCardController","methodName":"getPage","interfaceName":"StampCardVO4","isArray":true},"schemaType":"import"}],"events":[{"name":"modifyRequest","comment":"修改查询条件数据","content":"immerUtil.assign(draftState.request,payload);","param":""},{"name":"cleanList","comment":"清空查询结果","content":"draftState.list = [];","param":""},{"name":"queryResult","comment":"","content":"draftState.list = payload.list;\n        draftState.total = payload.total;\n        ","param":""}]}],"actions":[{"fileName":"action","methods":[{"name":"modifySearch","comment":"\n              普通条件查询可以走,commonChange\n              ","content":"\n      dispatch({ type: Command.modifyRequest, payload: param});\n      //修改完直接查询;\n      if(options.isQuery) {\n        await this.query(options.isResetPage)\n      }\n      ","param":"param,options:{\n      isQuery:boolean;\n      isResetPage:boolean;\n    }={isQuery:true,isResetPage:false}"},{"name":"nextPage","comment":"查询下一页","param":"","content":"\n      let {request} = getData().main;\n      request.pageNum=request.pageNum+1;\n      dispatch({ type: Command.modifyRequest, payload: request });\n      await this.query();\n              "},{"name":"query","comment":"以当前查询条件查询","param":"isResetPage:boolean=false","content":"\n            if(isResetPage) {\n              await dispatch({ type: Command.modifyRequest, payload: {pageNum:0} });\n            }\n          \n          let {request} =  getData().main;\n      //TODO 接口缺失 \n      // let {} = await api.StampCardController.getPage();\n      \n      dispatch({ type: Command.queryResult, payload: {\n        total:0,\n        list:[]\n        } });\n        "}]}],"subComps":[{"fileName":"info","methods":[{"name":"render","comment":"\n               \n              \n    table引入指南: \n  入类\nimport { Table, Popover,Button,Input,Select } from \"antd\";\nimport * as uiLogic from \"wmkit/ui-logic\";\n import {StampCardVO4} from  'api/StampCardController'\n\n\n              \n     searchlist 引用第一步\n     第一步添加引用;  \n     \n      import { Table, Popover,Button,Input,Select } from \"antd\";\n      import {toTableProps} from \"wmkit/ui-logic\";\n    \n              ","content":"\n    /*\n    return (\n    <>\n       <div className=\"search\">\n          <div className=\"clearfix\">\n            <Button className=\"fl\" type=\"primary\" onClick={()=>location.href=\"\"}>添加服务</Button>\n            <div className=\"fr\">\n            <Select defaultValue={main.request.cate ? main.request.cate : '所有分类'}  onSelect={this._onSelect} style={{ width: 120,marginRight:20 }} >\n              <Select.Option value=\"\">所有分类</Select.Option>\n              {main.categorys.map((item:ProjectCateSimpleVO)=><Option value={item.projectCateId}>{item.projectCateName}</Option>)}\n            </Select>\n              <Input.Search\n                data-type={\"projectName\"}\n                placeholder=\"请输入服务名称\"\n                onChange={this._change}\n                onSearch={value => console.log(value)}\n                style={{ width: 200 }}\n              />\n              <Button className=\"ml10\" type=\"primary\" onClick={action.query.bind(null,true)} ghost>搜索</Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"list mt20\">\n        \n    const getContent = (record: StampCardVO4, index) =>(\n      <div className=\"opt-more\">\n         <a href=\"javascript:;\" data-id={record.projectId} data-index={index} data-status={record.addedFlag} onClick={action.toggleStatus}>{record.addedFlag===0?\"上架\":\"下架\"}</a>\n         <a href={\"#/goods/services-add?id=\"+record.projectId}>详情</a>\n      </div>\n    );\n    <Table {...uiLogic.toTableProps(main, action)}\n     \n    >\n            <Table.Column\n              title=\"分类\"\n              key=\"3\"\n              width={180}\n              render={(text, record: StampCardVO4, index) => {\n                return <span>{record.projectCateName}</span>;\n              }}\n            />\n            \n             \n             \n           <Table.Column\n              title=\"宠物信息\"\n              key=\"1\"\n              width={180}\n              render={(text, record: StampCardVO4, index) => {\n                return (<img\n                  className=\"mr10\"\n                  width=\"50\"\n                  height=\"50\"\n                  src={\"\"}\n                />)\n              }}\n            />\n          \n            \n      \n            <Table.Column\n              title=\"操作\"\n              key=\"7\"\n              width={180}\n              render={(text, record: StampCardVO4, index) => {\n                return (\n                  <div className=\"opt\">\n                    <Popover\n                      placement=\"bottom\"\n                      content={getContent(record, index)}\n                      trigger=\"click\"\n                    >\n                      <a href=\"javascript:;\" className=\"btn\">更多</a>\n                    </Popover>\n                    <a\n                      className=\"btn\"\n                      href={'#/goods/service-add?id=' + record.projectId}\n                    >\n                      编辑\n                    </a>\n                  </div>\n                );\n              }}\n            />\n          </Table>\n\n    \n          \n        </div>\n    </>\n    );\n    */\n    ","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"clean","param":"","content":""}},"mainComp":{"methods":[]}},"apps/meituan/consume-list":{"pagePath":"apps/meituan/consume-list","actors":[{"fileName":"main","datas":[{"name":"request","value":{"q":"","pageNum":0,"pageSize":10}},{"name":"total","value":0},{"name":"list","value":[],"importInfo":{"apiFile":"MeituanConsumeController","methodName":"page","interfaceName":"MeituanConsumeVO","isArray":true},"schemaType":"import"}],"events":[{"name":"modifyRequest","comment":"修改查询条件数据","content":"immerUtil.assign(draftState.request,payload);","param":""},{"name":"cleanList","comment":"清空查询结果","content":"draftState.list = [];","param":""},{"name":"queryResult","comment":"","content":"draftState.list = payload.list;\n        draftState.total = payload.total;\n        ","param":""}]}],"actions":[{"fileName":"action","methods":[{"name":"modifySearch","comment":"\n              普通条件查询可以走,commonChange\n              ","content":"\n      dispatch({ type: Command.modifyRequest, payload: param});\n      //修改完直接查询;\n      if(options.isQuery) {\n        await this.query(options.isResetPage)\n      }\n      ","param":"param,options:{\n      isQuery:boolean;\n      isResetPage:boolean;\n    }={isQuery:true,isResetPage:false}"},{"name":"nextPage","comment":"查询下一页","param":"","content":"\n      let {request} = getData().main;\n      request.pageNum=request.pageNum+1;\n      dispatch({ type: Command.modifyRequest, payload: request });\n      await this.query();\n              "},{"name":"query","comment":"以当前查询条件查询","param":"isResetPage:boolean=false","content":"\n            if(isResetPage) {\n              await dispatch({ type: Command.modifyRequest, payload: {pageNum:0} });\n            }\n          \n          let {request} =  getData().main;\n      //TODO 接口缺失 \n      // let {} = await api.MeituanConsumeController.page();\n      \n      dispatch({ type: Command.queryResult, payload: {\n        total:0,\n        list:[]\n        } });\n        "},{"name":"undoConsume","comment":"撤销核销","content":"","param":""}]}],"subComps":[{"fileName":"info","methods":[{"name":"render","comment":"\n               \n              \n    table引入指南: \n  入类\nimport { Table, Popover,Button,Input,Select } from \"antd\";\nimport * as uiLogic from \"wmkit/ui-logic\";\n import {MeituanConsumeVO} from  'api/MeituanConsumeController'\n\n\n              \n     searchlist 引用第一步\n     第一步添加引用;  \n     \n      import { Table, Popover,Button,Input,Select } from \"antd\";\n      import {toTableProps} from \"wmkit/ui-logic\";\n    \n              ","content":"\n    /*\n    return (\n    <>\n       <div className=\"search\">\n          <div className=\"clearfix\">\n            <Button className=\"fl\" type=\"primary\" onClick={()=>location.href=\"\"}>添加服务</Button>\n            <div className=\"fr\">\n            <Select defaultValue={main.request.cate ? main.request.cate : '所有分类'}  onSelect={this._onSelect} style={{ width: 120,marginRight:20 }} >\n              <Select.Option value=\"\">所有分类</Select.Option>\n              {main.categorys.map((item:ProjectCateSimpleVO)=><Option value={item.projectCateId}>{item.projectCateName}</Option>)}\n            </Select>\n              <Input.Search\n                data-type={\"projectName\"}\n                placeholder=\"请输入服务名称\"\n                onChange={this._change}\n                onSearch={value => console.log(value)}\n                style={{ width: 200 }}\n              />\n              <Button className=\"ml10\" type=\"primary\" onClick={action.query.bind(null,true)} ghost>搜索</Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"list mt20\">\n        \n    const getContent = (record: MeituanConsumeVO, index) =>(\n      <div className=\"opt-more\">\n         <a href=\"javascript:;\" data-id={record.projectId} data-index={index} data-status={record.addedFlag} onClick={action.toggleStatus}>{record.addedFlag===0?\"上架\":\"下架\"}</a>\n         <a href={\"#/goods/services-add?id=\"+record.projectId}>详情</a>\n      </div>\n    );\n    <Table {...uiLogic.toTableProps(main, action)}\n     \n    >\n            <Table.Column\n              title=\"分类\"\n              key=\"3\"\n              width={180}\n              render={(text, record: MeituanConsumeVO, index) => {\n                return <span>{record.projectCateName}</span>;\n              }}\n            />\n            \n             \n             \n           \n          \n            \n      \n            <Table.Column\n              title=\"操作\"\n              key=\"7\"\n              width={180}\n              render={(text, record: MeituanConsumeVO, index) => {\n                return (\n                  <div className=\"opt\">\n                    <Popover\n                      placement=\"bottom\"\n                      content={getContent(record, index)}\n                      trigger=\"click\"\n                    >\n                      <a href=\"javascript:;\" className=\"btn\">更多</a>\n                    </Popover>\n                    <a\n                      className=\"btn\"\n                      href={'#/goods/service-add?id=' + record.projectId}\n                    >\n                      编辑\n                    </a>\n                  </div>\n                );\n              }}\n            />\n          </Table>\n\n    \n          \n        </div>\n    </>\n    );\n    */\n    ","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"clean","param":"","content":""}},"mainComp":{"methods":[]}},"customer/exports":{"pagePath":"customer/exports","actors":[{"fileName":"main","datas":[{"name":"request","value":{"q":"","pageNum":0,"pageSize":10}},{"name":"total","value":0},{"name":"list","value":[],"schemaType":"fromValue"}],"events":[{"name":"modifyRequest","comment":"修改查询条件数据","content":"immerUtil.assign(draftState.request,payload);","param":""},{"name":"cleanList","comment":"清空查询结果","content":"draftState.list = [];","param":""},{"name":"queryResult","comment":"","content":"draftState.list = payload.list;\n        draftState.total = payload.total;\n        ","param":""}]}],"actions":[{"fileName":"action","methods":[{"name":"modifySearch","comment":"\n              普通条件查询可以走,commonChange\n              ","content":"\n      dispatch({ type: Command.modifyRequest, payload: param});\n      //修改完直接查询;\n      if(options.isQuery) {\n        await this.query(options.isResetPage)\n      }\n      ","param":"param,options:{\n      isQuery:boolean;\n      isResetPage:boolean;\n    }={isQuery:true,isResetPage:false}"},{"name":"nextPage","comment":"查询下一页","param":"","content":"\n      let {request} = getData().main;\n      request.pageNum=request.pageNum+1;\n      dispatch({ type: Command.modifyRequest, payload: request });\n      await this.query();\n              "},{"name":"query","comment":"以当前查询条件查询","param":"isResetPage:boolean=false","content":"\n            if(isResetPage) {\n              await dispatch({ type: Command.modifyRequest, payload: {pageNum:0} });\n            }\n          \n          let {request} =  getData().main;\n      //TODO 接口缺失 \n      // let {} = await api..XXapi();\n      \n      dispatch({ type: Command.queryResult, payload: {\n        total:0,\n        list:[]\n        } });\n        "},{"name":"downTemplate","comment":"下载模板","content":"","param":""},{"name":"chooseFile","comment":"选择文件","content":"","param":""},{"name":"upLoadFile","comment":"上传文件","content":"","param":""}]}],"subComps":[{"fileName":"header","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"list","methods":[{"name":"render","comment":"\n               \n              \n    table引入指南: \n  入类\nimport { Table, Popover,Button,Input,Select } from \"antd\";\nimport * as uiLogic from \"wmkit/ui-logic\";\n import {IMainList from  '../types'\n\n\n              \n     searchlist 引用第一步\n     第一步添加引用;  \n     \n      import { Table, Popover,Button,Input,Select } from \"antd\";\n      import {toTableProps} from \"wmkit/ui-logic\";\n    \n              ","content":"\n    /*\n    return (\n    <>\n       <div className=\"search\">\n          <div className=\"clearfix\">\n            <Button className=\"fl\" type=\"primary\" onClick={()=>location.href=\"\"}>添加服务</Button>\n            <div className=\"fr\">\n            <Select defaultValue={main.request.cate ? main.request.cate : '所有分类'}  onSelect={this._onSelect} style={{ width: 120,marginRight:20 }} >\n              <Select.Option value=\"\">所有分类</Select.Option>\n              {main.categorys.map((item:ProjectCateSimpleVO)=><Option value={item.projectCateId}>{item.projectCateName}</Option>)}\n            </Select>\n              <Input.Search\n                data-type={\"projectName\"}\n                placeholder=\"请输入服务名称\"\n                onChange={this._change}\n                onSearch={value => console.log(value)}\n                style={{ width: 200 }}\n              />\n              <Button className=\"ml10\" type=\"primary\" onClick={action.query.bind(null,true)} ghost>搜索</Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"list mt20\">\n        \n    const getContent = (record: IMainList, index) =>(\n      <div className=\"opt-more\">\n         <a href=\"javascript:;\" data-id={record.projectId} data-index={index} data-status={record.addedFlag} onClick={action.toggleStatus}>{record.addedFlag===0?\"上架\":\"下架\"}</a>\n         <a href={\"#/goods/services-add?id=\"+record.projectId}>详情</a>\n      </div>\n    );\n    <Table {...uiLogic.toTableProps(main, action)}\n     \n    >\n            <Table.Column\n              title=\"分类\"\n              key=\"3\"\n              width={180}\n              render={(text, record: IMainList, index) => {\n                return <span>{record.projectCateName}</span>;\n              }}\n            />\n            \n             \n             \n           <Table.Column\n              title=\"宠物信息\"\n              key=\"1\"\n              width={180}\n              render={(text, record: IMainList, index) => {\n                return (<img\n                  className=\"mr10\"\n                  width=\"50\"\n                  height=\"50\"\n                  src={\"\"}\n                />)\n              }}\n            />\n          \n            \n      \n            <Table.Column\n              title=\"操作\"\n              key=\"7\"\n              width={180}\n              render={(text, record: IMainList, index) => {\n                return (\n                  <div className=\"opt\">\n                    <Popover\n                      placement=\"bottom\"\n                      content={getContent(record, index)}\n                      trigger=\"click\"\n                    >\n                      <a href=\"javascript:;\" className=\"btn\">更多</a>\n                    </Popover>\n                    <a\n                      className=\"btn\"\n                      href={'#/goods/service-add?id=' + record.projectId}\n                    >\n                      编辑\n                    </a>\n                  </div>\n                );\n              }}\n            />\n          </Table>\n\n    \n          \n        </div>\n    </>\n    );\n    */\n    ","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"clean","param":"","content":""}},"mainComp":{"methods":[]}},"apps/mini-program":{"pagePath":"apps/mini-program","actors":[{"fileName":"main","datas":[{"name":"info","schemaType":"import","value":"","importInfo":{"apiFile":"BaseConfigController","methodName":"saveBaseConfig","interfaceName":"BaseConfigRopResponse","isArray":false}},{"name":"shopList","schemaType":"import","value":"","importInfo":{"apiFile":"MeituanAuthController","methodName":"shop","interfaceName":"MeituanShopVO","isArray":true}},{"name":"shopInfo","schemaType":"import","value":"","importInfo":{"apiFile":"MeituanAuthController","methodName":"shop","interfaceName":"MeituanShopVO","isArray":false}}],"events":[]}],"actions":[{"fileName":"action","methods":[{"name":"authSucess","comment":"授权成功","content":"","param":""},{"name":"bindShop","comment":"绑定店铺","content":"","param":""}]}],"subComps":[{"fileName":"info","methods":[{"name":"render","comment":"","content":"","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"init","param":"","content":""}},"mainComp":{"methods":[]}},"apps/uc-card/stroke-card-detail":{"pagePath":"apps/uc-card/stroke-card-detail","actors":[{"fileName":"main","datas":[{"name":"info","value":[],"importInfo":{"apiFile":"StampCardController","methodName":"getById","interfaceName":"StampCardVO5","isArray":false},"schemaType":"import"}],"events":[]}],"actions":[{"fileName":"action","methods":[]}],"subComps":[{"fileName":"info","methods":[{"name":"render","comment":"\n    table引入指南: \n  入类\nimport { Table, Popover,Button,Input,Select } from \"antd\";\nimport * as uiLogic from \"wmkit/ui-logic\";\n import {StampCardVO5} from  'api/StampCardController'\n\n","content":"\n    const getContent = (record: StampCardVO5, index) =>(\n      <div className=\"opt-more\">\n         <a href=\"javascript:;\" data-id={record.projectId} data-index={index} data-status={record.addedFlag} onClick={action.toggleStatus}>{record.addedFlag===0?\"上架\":\"下架\"}</a>\n         <a href={\"#/goods/services-add?id=\"+record.projectId}>详情</a>\n      </div>\n    );\n    <Table {...uiLogic.toTableProps(main, action)}\n     \n    >\n            <Table.Column\n              title=\"分类\"\n              key=\"3\"\n              width={180}\n              render={(text, record: StampCardVO5, index) => {\n                return <span>{record.projectCateName}</span>;\n              }}\n            />\n            \n             \n             \n           <Table.Column\n              title=\"宠物信息\"\n              key=\"1\"\n              width={180}\n              render={(text, record: StampCardVO5, index) => {\n                return (<img\n                  className=\"mr10\"\n                  width=\"50\"\n                  height=\"50\"\n                  src={\"\"}\n                />)\n              }}\n            />\n          \n            \n      \n            <Table.Column\n              title=\"操作\"\n              key=\"7\"\n              width={180}\n              render={(text, record: StampCardVO5, index) => {\n                return (\n                  <div className=\"opt\">\n                    <Popover\n                      placement=\"bottom\"\n                      content={getContent(record, index)}\n                      trigger=\"click\"\n                    >\n                      <a href=\"javascript:;\" className=\"btn\">更多</a>\n                    </Popover>\n                    <a\n                      className=\"btn\"\n                      href={'#/goods/service-add?id=' + record.projectId}\n                    >\n                      编辑\n                    </a>\n                  </div>\n                );\n              }}\n            />\n          </Table>\n\n    ","param":""}]}],"lifeCycles":{"init":{"param":"{id}","content":"\n      let payload = {\n        main:{\n        }\n      }\n        //let {} = await api.StampCardController.getById();\n       \n      if(id) {\n        //TODO 查询接口缺失\n        // let result = await api.\n        // payload.main.info=\n      }\n\n      dispatch({\n        type: Command.init,\n        payload: payload\n      });\n    "},"clean":{"name":"clean","param":"","content":""}},"mainComp":{"methods":[]}},"order/order-detail":{"pagePath":"order/order-detail","actors":[{"fileName":"main","datas":[{"name":"info","schemaType":"import","value":"","importInfo":{"apiFile":"PetOrderController","methodName":"detail","interfaceName":"OrderVO2","isArray":false}}],"events":[]}],"actions":[{"fileName":"action","methods":[{"name":"print","comment":"打印小票","content":"","param":""}]}],"subComps":[{"fileName":"info","methods":[{"name":"render","comment":"\n    table引入指南: \n  入类\nimport { Table, Popover,Button,Input,Select } from \"antd\";\nimport * as uiLogic from \"wmkit/ui-logic\";\n import {OrderVO2} from  'api/PetOrderController'\n\n","content":"\n    const getContent = (record: OrderVO2, index) =>(\n      <div className=\"opt-more\">\n         <a href=\"javascript:;\" data-id={record.projectId} data-index={index} data-status={record.addedFlag} onClick={action.toggleStatus}>{record.addedFlag===0?\"上架\":\"下架\"}</a>\n         <a href={\"#/goods/services-add?id=\"+record.projectId}>详情</a>\n      </div>\n    );\n    <Table {...uiLogic.toTableProps(main, action)}\n     \n    >\n            <Table.Column\n              title=\"分类\"\n              key=\"3\"\n              width={180}\n              render={(text, record: OrderVO2, index) => {\n                return <span>{record.projectCateName}</span>;\n              }}\n            />\n            \n             \n             \n           <Table.Column\n              title=\"宠物信息\"\n              key=\"1\"\n              width={180}\n              render={(text, record: OrderVO2, index) => {\n                return (<img\n                  className=\"mr10\"\n                  width=\"50\"\n                  height=\"50\"\n                  src={\"\"}\n                />)\n              }}\n            />\n          \n            \n      \n            <Table.Column\n              title=\"操作\"\n              key=\"7\"\n              width={180}\n              render={(text, record: OrderVO2, index) => {\n                return (\n                  <div className=\"opt\">\n                    <Popover\n                      placement=\"bottom\"\n                      content={getContent(record, index)}\n                      trigger=\"click\"\n                    >\n                      <a href=\"javascript:;\" className=\"btn\">更多</a>\n                    </Popover>\n                    <a\n                      className=\"btn\"\n                      href={'#/goods/service-add?id=' + record.projectId}\n                    >\n                      编辑\n                    </a>\n                  </div>\n                );\n              }}\n            />\n          </Table>\n\n    ","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"clean","param":"","content":""}},"mainComp":{"methods":[]}},"apps/sms/sms-touch":{"pagePath":"apps/sms/sms-touch","actors":[{"fileName":"main","datas":[{"name":"remainSms","schemaType":"import","value":null,"importInfo":{"apiFile":"StoreSmsController","methodName":"getById","interfaceName":"StoreSmsVO5","isArray":false}},{"name":"request","value":{"q":"","pageNum":0,"pageSize":20}},{"name":"total","value":0},{"name":"list","value":[],"importInfo":{"apiFile":"StoreSmsController","methodName":"getList","interfaceName":"StoreSmsVO2","isArray":true},"schemaType":"import"}],"events":[{"name":"modifyRequest","comment":"修改查询条件数据","content":"immerUtil.assign(draftState.request,payload);","param":""},{"name":"cleanList","comment":"清空查询结果","content":"draftState.list = [];","param":""},{"name":"queryResult","comment":"","content":"draftState.list = payload.list;\n        draftState.total = payload.total;\n        ","param":""},{"name":"changByNumber","comment":"改变购买条数","param":""}]}],"actions":[{"fileName":"action","methods":[{"name":"submit","comment":"提交表单","content":"\n      let {main: {info, mode}} = getData();\n      if (info.id) {\n      } else {\n      }","param":""},{"name":"modifySearch","comment":"\n              普通条件查询可以走,commonChange\n              ","content":"\n      dispatch({ type: Command.modifyRequest, payload: param});\n      //修改完直接查询;\n      if(options.isQuery) {\n        await this.query(options.isResetPage)\n      }\n      ","param":"param,options:{\n      isQuery:boolean;\n      isResetPage:boolean;\n    }={isQuery:true,isResetPage:false}"},{"name":"nextPage","comment":"查询下一页","param":"","content":"\n      let {request} = getData().main;\n      request.pageNum=request.pageNum+1;\n      dispatch({ type: Command.modifyRequest, payload: request });\n      await this.query();\n              "},{"name":"query","comment":"以当前查询条件查询","param":"isResetPage:boolean=false","content":"\n            if(isResetPage) {\n              await dispatch({ type: Command.modifyRequest, payload: {pageNum:0} });\n            }\n          \n          let {request} =  getData().main;\n      //TODO 接口缺失 \n      // let {} = await api.StoreSmsController.getList();\n      \n      dispatch({ type: Command.queryResult, payload: {\n        total:0,\n        list:[]\n        } });\n        "}]}],"subComps":[{"fileName":"sms-order","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"sms-template","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"sms-send","methods":[{"name":"render","comment":"","content":"\n/*\n        //1. 引入import\n        import moment from 'moment';\n        import  {ValidConst } from  'wmkit';import  {Form,Input,Select,Button,Row,Col,Radio } from  'antd'\n        \n        import {WrappedFormUtils} from \"antd/lib/form/Form\";\n        //2. 定义formts提示\n        &{\n  form:WrappedFormUtils\n}\n        //3.render方法\n       let { getFieldDecorator } = this.props.form;\n       export default Form.create<any>({ name: 'pets-info' })(PetsInfo as any );\n         \n        \n    const formItemLayout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 8 }\n    };\n    const formItemLayoutBig = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 16 }\n    };\n        \n  return (<div className=\"formContent #instanceName#\">\n       <Form layout=\"horizontal\">\n             \n    <Form.Item required {...formItemLayout} label=\"服务名称\">\n          {getFieldDecorator('username', {\n            initialValue:main.info.projectName,\n            rules: [{ required: true, message: '请输入服务名称!' }],\n          })(\n            <Input data-paths={'main.info.projectName'} onChange={action.commonChange}  placeholder=\"请输入服务名称\" />\n          )}\n          </Form.Item>\n<Form.Item {...formItemLayout} label=\"宠物特征\">\n            <Input.TextArea rows={3} data-paths={'main.info.petFeatures'}\n             onChange={action.commonChange} value={main.info.petFeatures} \n             placeholder=\"\" />\n          </Form.Item>\n    \n    <Form.Item required {...formItemLayout} label=\"分类\">\n            <Select placeholder=\"请选择服务分类\" value={main.info.projectCateId} style={{ width: 160 }}\n                     onChange={action.commonChange}>\n              {\n                main.cates.map((item,index)=><Select.Option key={item.projectCateId+(index+\"\")}   data-paths={\"main.info.projectCateId\"} value={item.projectCateId}>{item.projectCateName}</Select.Option>)\n              }\n            </Select>\n          </Form.Item>\n    undefined<Form.Item>\n            <Row gutter={0}>\n              <Col span={4} />\n              <Col span={4}>\n                <Button type=\"primary\" onClick={action.submit}>\n                  保存\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n    \n    <Form.Item required {...formItemLayout} label=\"宠物类型\">\n            <Radio.Group value={main.info.petType} onChange={action.commonChange}>\n              <Radio value={1} data-paths={\"main.info.petType\"}>狗狗</Radio>\n              <Radio value={2} data-paths={\"main.info.petType\"}>猫咪</Radio>\n            </Radio.Group>\n          </Form.Item>\n    \n        </Form>\n      </div>)\n*/\n","param":""},{"name":"_submit","comment":"提交表单","content":"\n    const { form: { validateFields },actions:{action},main} = this.props;\n    validateFields(async(errors, values) => {\n      if(!errors) {\n        await this.props.actions.action.submit();\n        return false;\n      }\n    });\n      ","param":""}]},{"fileName":"send-record","methods":[{"name":"render","comment":"","content":"","param":""}]},{"fileName":"sms","methods":[{"name":"render","comment":"","content":"\n   // import { Tabs } from \"antd\";\n    <Tabs activeKey={main.request.type} type=\"card\"\n    onChange={action.commonChange.bind(null,\"main.request.type\")}>\n          <Tabs.TabPane tab=\"员工管理\" key=\"1\">\n            <div >111</div>\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"角色管理\" key=\"2\">\n            <div >222</div>\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"已禁用账号\" key=\"3\">\n            <div >333</div>\n          </Tabs.TabPane>\n        </Tabs>\n    ","param":""}]}],"lifeCycles":{"init":{"name":"init","param":"","content":""},"clean":{"name":"clean","param":"","content":""}},"mainComp":{"methods":[]}},"apps/city-distribution/distribution-set":{"pagePath":"apps/city-distribution/distribution-set","actors":[{"fileName":"main","datas":[{"name":"distribution","schemaType":"import","value":{},"importInfo":{"apiFile":"LocalConfigController","methodName":"get","interfaceName":"StoreDadaConfigByIdResponse","isArray":false}}],"events":[]}],"actions":[{"fileName":"action","methods":[{"name":"submit","comment":"提交表单","content":"\n      let {main: {info, mode}} = getData();\n      if (info.id) {\n      } else {\n      }","param":""}]}],"subComps":[{"fileName":"info","methods":[{"name":"render","comment":"","content":"\n/*\n        //1. 引入import\n        import moment from 'moment';\n        import  {ValidConst } from  'wmkit';import  {Form,Input,Button,Row,Col } from  'antd'\n        \n        import {WrappedFormUtils} from \"antd/lib/form/Form\";\n        //2. 定义formts提示\n        &{\n  form:WrappedFormUtils\n}\n        //3.render方法\n       let { getFieldDecorator } = this.props.form;\n       export default Form.create<any>({ name: 'pets-info' })(PetsInfo as any );\n         \n        \n    const formItemLayout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 8 }\n    };\n    const formItemLayoutBig = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 16 }\n    };\n        \n  return (<div className=\"formContent #instanceName#\">\n       <Form layout=\"horizontal\">\n             \n    <Form.Item required {...formItemLayout} label=\"服务名称\">\n          {getFieldDecorator('username', {\n            initialValue:main.info.projectName,\n            rules: [{ required: true, message: '请输入服务名称!' }],\n          })(\n            <Input data-paths={'main.info.projectName'} onChange={action.commonChange}  placeholder=\"请输入服务名称\" />\n          )}\n          </Form.Item>\n<Form.Item>\n            <Row gutter={0}>\n              <Col span={4} />\n              <Col span={4}>\n                <Button type=\"primary\" onClick={action.submit}>\n                  保存\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n    \n        </Form>\n      </div>)\n*/\n","param":""},{"name":"_submit","comment":"提交表单","content":"\n    const { form: { validateFields },actions:{action},main} = this.props;\n    validateFields(async(errors, values) => {\n      if(!errors) {\n        await this.props.actions.action.submit();\n        return false;\n      }\n    });\n      ","param":""}]}],"lifeCycles":{"init":{"param":"{id}","content":"\n      let payload = {\n        main:{\n        }\n      }\n        //let {} = await api.LocalConfigController.get();\n//let {} = await api.LocalConfigController.get();\n       \n      if(id) {\n        //TODO 查询接口缺失\n        // let result = await api.\n        // payload.main.info=\n      }\n\n      dispatch({\n        type: Command.init,\n        payload: payload\n      });\n    "},"clean":{"name":"clean","param":"","content":""}},"mainComp":{"methods":[]}},"apps/city-distribution/local-config":{"pagePath":"apps/city-distribution/local-config","actors":[{"fileName":"main","datas":[{"name":"distribution","schemaType":"import","value":{},"importInfo":{"apiFile":"LocalConfigController","methodName":"get","interfaceName":"StoreDadaConfigByIdResponse","isArray":false}}],"events":[]}],"actions":[{"fileName":"action","methods":[{"name":"submit","comment":"提交表单","content":"\n      let {main: {info, mode}} = getData();\n      if (info.id) {\n      } else {\n      }","param":""}]}],"subComps":[{"fileName":"info","methods":[{"name":"render","comment":"","content":"\n/*\n        //1. 引入import\n        import moment from 'moment';\n        import  {ValidConst } from  'wmkit';import  {Form,Input,Button,Row,Col } from  'antd'\n        \n        import {WrappedFormUtils} from \"antd/lib/form/Form\";\n        //2. 定义formts提示\n        &{\n  form:WrappedFormUtils\n}\n        //3.render方法\n       let { getFieldDecorator } = this.props.form;\n       export default Form.create<any>({ name: 'pets-info' })(PetsInfo as any );\n         \n        \n    const formItemLayout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 8 }\n    };\n    const formItemLayoutBig = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 16 }\n    };\n        \n  return (<div className=\"formContent #instanceName#\">\n       <Form layout=\"horizontal\">\n             \n    <Form.Item required {...formItemLayout} label=\"服务名称\">\n          {getFieldDecorator('username', {\n            initialValue:main.info.projectName,\n            rules: [{ required: true, message: '请输入服务名称!' }],\n          })(\n            <Input data-paths={'main.info.projectName'} onChange={action.commonChange}  placeholder=\"请输入服务名称\" />\n          )}\n          </Form.Item>\n<Form.Item>\n            <Row gutter={0}>\n              <Col span={4} />\n              <Col span={4}>\n                <Button type=\"primary\" onClick={action.submit}>\n                  保存\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n    \n        </Form>\n      </div>)\n*/\n","param":""},{"name":"_submit","comment":"提交表单","content":"\n    const { form: { validateFields },actions:{action},main} = this.props;\n    validateFields(async(errors, values) => {\n      if(!errors) {\n        await this.props.actions.action.submit();\n        return false;\n      }\n    });\n      ","param":""}]}],"lifeCycles":{"init":{"param":"{id}","content":"\n      let payload = {\n        main:{\n        }\n      }\n        //let {} = await api.LocalConfigController.get();\n//let {} = await api.LocalConfigController.get();\n       \n      if(id) {\n        //TODO 查询接口缺失\n        // let result = await api.\n        // payload.main.info=\n      }\n\n      dispatch({\n        type: Command.init,\n        payload: payload\n      });\n    "},"clean":{"name":"clean","param":"","content":""}},"mainComp":{"methods":[]}}}
